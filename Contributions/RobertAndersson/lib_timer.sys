MODULE lib_timer(SYSMODULE)

    !*****************************************************
    ! * Copyright (C) 2013 Robert Andersson <rob@ernell.se>
    ! *
    ! * Licensed under the Apache License, Version 2.0 (the "License");
    ! * you may not use this file except in compliance with the License.
    ! * You may obtain a copy of the License at
    ! *
    ! *      http://www.apache.org/licenses/LICENSE-2.0
    ! *
    ! * Unless required by applicable law or agreed to in writing, software
    ! * distributed under the License is distributed on an "AS IS" BASIS,
    ! * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    ! * See the License for the specific language governing permissions and
    ! * limitations under the License.
    !*****************************************************

    !*****************************************************
    ! Module Name: lib_timer
    ! Version:     0.22
    ! Description: A simple timer with basic functionality
    ! Date:        2015-02-24
    ! Author:      Robert Andersson <rob@ernell.se>
    ! Internet:    http://github.com/ernell/ABB-RAPID-UTILITY-LIBRARY
    !*****************************************************
    ! Changelog:
    !              2022-12-28 v0.22 Added history of time measurements
    !*****************************************************

    LOCAL VAR clock clTimer;
    ! holds the timer value
    LOCAL PERS num nTimer:=0;
    ! nItems used for counting, call TimerTick() to increase value
    LOCAL PERS num nItems:=0;
    ! time/item.
    LOCAL PERS num nItemTime:=0;
    ! History of last measured times
    LOCAL PERS num nTimerHistory{32}:=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];

    !*****************************************************
    ! Reset the tickcounter
    !*****************************************************
    PROC TimerItemReset()
        Clear nItems;
    ENDPROC

    !*****************************************************
    ! Increase the counter
    !*****************************************************
    PROC TimerTick()
        Incr nItems;
    ENDPROC

    !*****************************************************
    ! Get item count value
    !*****************************************************
    FUNC num GetItemCount()
        RETURN nItems;
    ENDFUNC

    !*****************************************************
    ! get Time/Item
    !*****************************************************
    FUNC num GetItemTime()
        TimerStop;
        IF nTimer=0 RETURN -1;
        IF GetItemCount()<1 RETURN -1;
        nItemTime:=nTimer/GetItemCount();
        RETURN nItemTime;
    ENDFUNC

    !*****************************************************
    ! Start the timer
    !*****************************************************
    PROC TimerStart()
        Clear nTimer;
        ClkReset clTimer;
        ClkStart clTimer;
    ENDPROC

    !*****************************************************
    ! Resume the timer
    !*****************************************************
    PROC TimerResume()
        ClkStart clTimer;
    ENDPROC

    !*****************************************************
    ! Stop the timer, save the value in var nTimer.
    ! Also save to history array.
    !*****************************************************
    PROC TimerStop()
        ClkStop clTimer;
        nTimer:=ClkRead(clTimer);
        TimerSave;
    ENDPROC

    !*****************************************************
    ! Stop the timer, clear all values
    !*****************************************************
    PROC TimerReset()
        ClkStop clTimer;
        Clear nTimer;
        Clear nItems;
        Clear nItemTime;
    ENDPROC

    !*****************************************************
    ! Return the timervalue
    !*****************************************************
    FUNC num GetTimer()
        RETURN nTimer;
    ENDFUNC

    !*****************************************************
    ! Print timer value
    ! Examples:
    !    TimerPrint;
    !      Timer: 0.235
    !    TimerPrint\row_number:=5;
    !      5. Timer: 4.743
    !*****************************************************
    PROC TimerPrint(\num row_number)
        VAR string stMessage;

        IF Present(row_number) THEN
            stMessage:=NumToStr(row_number,0)+". Timer: "+NumToStr(GetTimer(),3);
            TPWrite stMessage;
        ELSE
            TPWrite "Timer: "\Num:=GetTimer();
        ENDIF
    ENDPROC

    !*****************************************************
    ! Save last timed measurement
    !*****************************************************
    LOCAL PROC TimerSave()
        VAR num size:=0;

        size:=Dim(nTimerHistory,1);
        FOR i FROM size TO 2 STEP -1 DO
            nTimerHistory{i}:=nTimerHistory{i-1};
        ENDFOR
        nTimerHistory{1}:=nTimer;
    ENDPROC

ENDMODULE
